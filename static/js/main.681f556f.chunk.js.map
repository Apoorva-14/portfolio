{"version":3,"sources":["serviceWorker.ts","theme.ts","assets/images/about.jpeg","hooks/useResponsive.ts","components/About.tsx","components/IntroTexts.tsx","components/WorkLinks.tsx","pages/home.tsx","pages/interest.tsx","pages/contact.tsx","pages/work.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","theme","responsiveFontSizes","createTheme","typography","fontFamily","palette","type","primary","main","background","paper","useResponsive","useTheme","matches","xs","useMediaQuery","breakpoints","up","sm","md","lg","xl","responsiveValues","findLast","breakpoint","keys","About","projectSection","React","useRef","fetchByMediaQuery","ref","Container","Grid","container","spacing","item","Card","raised","CardMedia","className","image","about","title","CardContent","Typography","variant","color","component","align","IntroTexts","useState","isFadeIn","setIsFadeIn","currentSlide","setCurrentSlide","setTimeout","slide","Math","ceil","WorkLinks","Paper","elevation","List","aria-label","ListItem","ListItemIcon","Badge","ListItemText","ListItemSecondaryAction","IconButton","edge","Divider","Home","licenseKey","process","REACT_APP_FULLPAGE_LICENSE","paddingBottom","render","Wrapper","Interest","Contact","Work","App","pages","anchorElNav","setAnchorElNav","handleCloseNavMenu","ThemeProvider","AppBar","position","Toolbar","Box","sx","flexGrow","display","Link","RouterLink","to","map","page","Button","toLowerCase","onClick","size","aria-controls","aria-haspopup","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","exact","path","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.681f556f.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  createTheme, responsiveFontSizes,\n} from '@material-ui/core/styles';\n\n/**\n * Theme\n */\nconst theme = responsiveFontSizes(createTheme({\n  typography: {\n    fontFamily: 'Comic Neue',\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: 'rgba(51, 29, 21, 1)',\n    },\n    background: {\n      paper: 'rgba(161, 189, 166, 0.9)',\n    },\n  },\n}));\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/about.486366cb.jpeg\";","import { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { findLast } from 'ramda';\n\ntype Breakpoint = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n\ntype ResponsiveValues<P> = {\n  [key in Breakpoint]?: P\n}\n\nconst useResponsive = () => {\n  const theme = useTheme();\n\n  const matches = {\n    xs: useMediaQuery(theme.breakpoints.up('xs')),\n    sm: useMediaQuery(theme.breakpoints.up('sm')),\n    md: useMediaQuery(theme.breakpoints.up('md')),\n    lg: useMediaQuery(theme.breakpoints.up('lg')),\n    xl: useMediaQuery(theme.breakpoints.up('xl')),\n  };\n\n  return function fetchByMediaQuery<P>(responsiveValues: ResponsiveValues<P>) {\n    const match = findLast(\n      (breakpoint: Breakpoint) => matches[breakpoint] && responsiveValues[breakpoint] != null,\n      theme.breakpoints.keys,\n    );\n\n    return match && responsiveValues[match];\n  };\n};\n\nexport default useResponsive;\n","import './About.css';\nimport {\n  Card, CardContent, CardMedia, Container, Grid, Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport about from '../assets/images/about.jpeg';\nimport useResponsive from '../hooks/useResponsive';\n\nexport default function About() {\n  const projectSection = React.useRef(null);\n  const fetchByMediaQuery = useResponsive();\n\n  return (\n    <div ref={projectSection}>\n      <Container>\n        <Grid container spacing={fetchByMediaQuery({ xs: 2, md: 5 })}>\n          <Grid item sm={12} md={6}>\n            <Card raised={true}>\n              <CardMedia className=\"project-media\" image={about} title=\"about\" />\n              <CardContent>\n                <Typography variant=\"h5\" color=\"primary\" component=\"p\" align=\"justify\">\n                  I am a Software Engineer, and I enjoy coding. However, even more than the\n                  implementation of the logic for code, I enjoyed interacting with stakeholders to\n                  collect requirements for the applications I built, and laying out the\n                  user-centred design specifications. I thrived when dealing with ambiguity and\n                  defining the user experience for the products I developed.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import './IntroTexts.css';\n\nimport React, { useState } from 'react';\n\nexport default function IntroTexts() {\n  const [isFadeIn, setIsFadeIn] = useState(true);\n  const [currentSlide, setCurrentSlide] = useState(0.5);\n\n  setTimeout(() => {\n    const slide = currentSlide + 0.5;\n    if (slide > 2) {\n      setCurrentSlide(0.5);\n    } else {\n      setCurrentSlide(slide);\n    }\n    setIsFadeIn(!isFadeIn);\n  }, 1500);\n\n  return (\n    <div>\n      { Math.ceil(currentSlide) === 1\n        ? <div className={ isFadeIn ? 'intro-text fadeIn' : 'intro-text fadeOut' }>\n            HI! I AM APOORVA SHARMA\n          </div>\n        : null\n      }\n      { Math.ceil(currentSlide) === 2\n        ? <div className={ isFadeIn ? 'intro-text fadeIn' : 'intro-text fadeOut' }>\n        ASPIRING PRODUCT MANAGER\n      </div>\n        : null\n      }\n    </div>\n  );\n}\n","import './WorkLinks.css';\n\nimport React from 'react';\nimport {\n  Badge,\n  Container,\n  Divider, IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Paper,\n} from '@material-ui/core';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport DevicesIcon from '@material-ui/icons/Devices';\nimport RingVolumeIcon from '@material-ui/icons/RingVolume';\n\nexport default function WorkLinks() {\n  return (\n    <Container>\n      <Paper elevation={0} className=\"work-list\">\n        <List component=\"nav\" aria-label=\"main triggers\">\n          <ListItem>\n            <ListItemIcon>\n              <Badge color=\"primary\" variant=\"dot\">\n                <NotificationsActiveIcon />\n              </Badge>\n            </ListItemIcon>\n          <ListItemText primary=\"Consignment Triggers\" />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"launch\">\n                  <LaunchIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemIcon>\n              <RingVolumeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Masked Calling\" />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"comments\">\n                  <LaunchIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemIcon>\n              <DevicesIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Modelling Future App\" />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"comments\">\n                  <LaunchIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </Paper>\n    </Container>\n  );\n}\n","import ReactFullpage from '@fullpage/react-fullpage';\nimport React from 'react';\nimport About from '../components/About';\nimport IntroTexts from '../components/IntroTexts';\nimport WorkLinks from '../components/WorkLinks';\n\nexport default function Home() {\n  return (\n    <ReactFullpage\n      licenseKey={process.env.REACT_APP_FULLPAGE_LICENSE}\n      paddingBottom=\"64px\"\n      render={() => (\n        <ReactFullpage.Wrapper>\n          <div className=\"section banner home\">\n            <IntroTexts />\n          </div>\n          <div className=\"section banner section-1\">\n            <About />\n          </div>\n          <div className=\"section banner foot\">\n            <WorkLinks />\n          </div>\n        </ReactFullpage.Wrapper>\n      )}\n    />\n  );\n}\n","import React from 'react';\n\nexport default function Interest() {\n  return (<div></div>);\n}\n","import React from 'react';\n\nexport default function Contact() {\n  return (<div></div>);\n}\n","import React from 'react';\n\nexport default function Work() {\n  return (<div></div>);\n}\n","import {\n  AppBar, Box, Button, IconButton, Link, Menu, MenuItem, ThemeProvider, Toolbar,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport {\n  HashRouter as Router,\n  Link as RouterLink,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport theme from './theme';\nimport './App.css';\nimport Home from './pages/home';\nimport Interest from './pages/interest';\nimport Contact from './pages/contact';\nimport Work from './pages/work';\n\nexport default function App() {\n  const pages = ['Work', 'Interest', 'Contact'];\n\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n              <Link component={RouterLink} variant=\"h6\" color='textPrimary' to='/'>\n                ME\n              </Link>\n            </Box>\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n              {pages.map((page) => (\n                <Button\n                  key={page}\n                  component={RouterLink}\n                  to={`/${page.toLowerCase()}`}\n                  onClick={handleCloseNavMenu}\n                >\n                  {page}\n                </Button>\n              ))}\n            </Box>\n            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n              <IconButton\n                size=\"medium\"\n                aria-label=\"all pages\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n              >\n                {pages.map((page) => (\n                  <MenuItem key={page} onClick={handleCloseNavMenu}>\n                    <Link\n                      key={page}\n                      component={RouterLink}\n                      to={`/${page.toLowerCase()}`}\n                    >\n                      {page}\n                    </Link>\n                  </MenuItem>\n                ))}\n              </Menu>\n            </Box>\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n              <Link component={RouterLink} variant=\"h6\" color='textPrimary' to='/'>\n                ME\n              </Link>\n            </Box>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/work\">\n            <Work />\n          </Route>\n          <Route path=\"/interest\">\n            <Interest />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}
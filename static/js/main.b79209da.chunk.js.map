{"version":3,"sources":["serviceWorker.ts","theme.ts","assets/images/about.jpeg","hooks/useResponsive.ts","components/About.tsx","components/IntroTexts.tsx","components/WorkLinks.tsx","pages/home.tsx","pages/interest.tsx","assets/images/contact-back.avif","assets/images/me-avatar.jpeg","pages/contact.tsx","assets/images/grubgo.jpeg","assets/images/modeling-future.png","assets/images/triggers.png","pages/work.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","theme","responsiveFontSizes","createTheme","typography","fontFamily","palette","type","primary","main","background","paper","useResponsive","useTheme","matches","xs","useMediaQuery","breakpoints","up","sm","md","lg","xl","responsiveValues","findLast","breakpoint","keys","About","projectSection","React","useRef","fetchByMediaQuery","ref","Container","Grid","container","spacing","item","Card","raised","CardMedia","className","image","about","title","CardContent","Typography","variant","color","component","align","IntroTexts","useState","isFadeIn","setIsFadeIn","currentSlide","setCurrentSlide","setTimeout","slide","Math","ceil","WorkLinks","Paper","elevation","List","aria-label","ListItem","ListItemIcon","Badge","ListItemText","ListItemSecondaryAction","IconButton","edge","Divider","Home","licenseKey","process","REACT_APP_FULLPAGE_LICENSE","paddingBottom","render","Wrapper","Interest","Box","paddingTop","gutterBottom","src","useStyles","makeStyles","createStyles","root","maxWidth","media","height","avatar","width","border","margin","Contact","classes","display","alignItems","justifyContent","flexGrow","ContactBackImage","Avatar","alt","MeAvatar","fontWeight","CardActions","LinkedIn","GitHub","Instagram","Work","mediaStyles","useSlopeCardMediaStyles","textCardContentStyles","useN01TextInfoContentStyles","direction","sx","GrubGoImage","heading","body","TriggersImage","ModelingFutureImage","App","pages","anchorElNav","setAnchorElNav","handleCloseNavMenu","ThemeProvider","AppBar","position","Toolbar","Link","RouterLink","to","map","page","Button","toLowerCase","onClick","size","aria-controls","aria-haspopup","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","exact","path","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b79209da.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  || window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  createTheme, responsiveFontSizes,\n} from '@material-ui/core/styles';\n\n/**\n * Theme\n */\nconst theme = responsiveFontSizes(createTheme({\n  typography: {\n    fontFamily: 'Comic Neue',\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: 'rgba(51, 29, 21, 1)',\n    },\n    background: {\n      paper: 'rgba(161, 189, 166, 0.9)',\n    },\n  },\n}));\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/about.486366cb.jpeg\";","import { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { findLast } from 'ramda';\n\ntype Breakpoint = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n\ntype ResponsiveValues<P> = {\n  [key in Breakpoint]?: P\n}\n\nconst useResponsive = () => {\n  const theme = useTheme();\n\n  const matches = {\n    xs: useMediaQuery(theme.breakpoints.up('xs')),\n    sm: useMediaQuery(theme.breakpoints.up('sm')),\n    md: useMediaQuery(theme.breakpoints.up('md')),\n    lg: useMediaQuery(theme.breakpoints.up('lg')),\n    xl: useMediaQuery(theme.breakpoints.up('xl')),\n  };\n\n  return function fetchByMediaQuery<P>(responsiveValues: ResponsiveValues<P>) {\n    const match = findLast(\n      (breakpoint: Breakpoint) => matches[breakpoint] && responsiveValues[breakpoint] != null,\n      theme.breakpoints.keys,\n    );\n\n    return match && responsiveValues[match];\n  };\n};\n\nexport default useResponsive;\n","import './About.css';\nimport {\n  Card, CardContent, CardMedia, Container, Grid, Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport about from '../assets/images/about.jpeg';\nimport useResponsive from '../hooks/useResponsive';\n\nexport default function About() {\n  const projectSection = React.useRef(null);\n  const fetchByMediaQuery = useResponsive();\n\n  return (\n    <div ref={projectSection}>\n      <Container>\n        <Grid container spacing={fetchByMediaQuery({ xs: 2, md: 5 })}>\n          <Grid item sm={12} md={6}>\n            <Card raised={true}>\n              <CardMedia className=\"project-media\" image={about} title=\"about\" />\n              <CardContent>\n                <Typography variant=\"h5\" color=\"primary\" component=\"p\" align=\"justify\">\n                  I am a Software Engineer, and I enjoy coding. However, even more than the\n                  implementation of the logic for code, I enjoyed interacting with stakeholders to\n                  collect requirements for the applications I built, and laying out the\n                  user-centred design specifications. I thrived when dealing with ambiguity and\n                  defining the user experience for the products I developed.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import './IntroTexts.css';\n\nimport React, { useState } from 'react';\n\nexport default function IntroTexts() {\n  const [isFadeIn, setIsFadeIn] = useState(true);\n  const [currentSlide, setCurrentSlide] = useState(0.5);\n\n  setTimeout(() => {\n    const slide = currentSlide + 0.5;\n    if (slide > 2) {\n      setCurrentSlide(0.5);\n    } else {\n      setCurrentSlide(slide);\n    }\n    setIsFadeIn(!isFadeIn);\n  }, 1500);\n\n  return (\n    <div>\n      { Math.ceil(currentSlide) === 1\n        ? <div className={ isFadeIn ? 'intro-text fadeIn' : 'intro-text fadeOut' }>\n            HI! I AM APOORVA SHARMA\n          </div>\n        : null\n      }\n      { Math.ceil(currentSlide) === 2\n        ? <div className={ isFadeIn ? 'intro-text fadeIn' : 'intro-text fadeOut' }>\n        ASPIRING PRODUCT MANAGER\n      </div>\n        : null\n      }\n    </div>\n  );\n}\n","import './WorkLinks.css';\n\nimport React from 'react';\nimport {\n  Badge,\n  Container,\n  Divider, IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Paper,\n} from '@material-ui/core';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport DevicesIcon from '@material-ui/icons/Devices';\nimport RingVolumeIcon from '@material-ui/icons/RingVolume';\n\nexport default function WorkLinks() {\n  return (\n    <Container>\n      <Paper elevation={0} className=\"work-list\">\n        <List component=\"nav\" aria-label=\"main triggers\">\n          <ListItem>\n            <ListItemIcon>\n              <Badge color=\"primary\" variant=\"dot\">\n                <NotificationsActiveIcon />\n              </Badge>\n            </ListItemIcon>\n          <ListItemText primary=\"Consignment Triggers\" />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"launch\">\n                  <LaunchIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemIcon>\n              <RingVolumeIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Masked Calling\" />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"comments\">\n                  <LaunchIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <ListItemIcon>\n              <DevicesIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Modelling Future App\" />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"comments\">\n                  <LaunchIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </Paper>\n    </Container>\n  );\n}\n","import ReactFullpage from '@fullpage/react-fullpage';\nimport React from 'react';\nimport './home.css';\nimport About from '../components/About';\nimport IntroTexts from '../components/IntroTexts';\nimport WorkLinks from '../components/WorkLinks';\n\nexport default function Home() {\n  return (\n    <ReactFullpage\n      licenseKey={process.env.REACT_APP_FULLPAGE_LICENSE}\n      paddingBottom=\"64px\"\n      render={() => (\n        <ReactFullpage.Wrapper>\n          <div className=\"section banner home\">\n            <IntroTexts />\n          </div>\n          <div className=\"section banner section-1\">\n            <About />\n          </div>\n          <div className=\"section banner foot\">\n            <WorkLinks />\n          </div>\n        </ReactFullpage.Wrapper>\n      )}\n    />\n  );\n}\n","import './interest.css';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { Box } from '@material-ui/core';\n\nexport default function Interest() {\n  return (\n    <Container>\n      <Box paddingTop={'25px'}>\n        <Typography variant=\"h3\" gutterBottom>\n          Some of my favorite books\n        </Typography>\n      </Box>\n      <div className=\"wrap\">\n        <div className=\"tile\">\n          <img src='https://images.unsplash.com/photo-1464054313797-e27fb58e90a9?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=996&q=80' />\n          <div className=\"text\">\n            <h1>Thinking in Bets</h1>\n            <p className=\"animate-text\">Thinking in Bets is probably the best book for decision making that I have read. Poker champion turned decision strategist and speaker Anne Duke draws on examples from business, sports, politics, and (of course) poker to share tools anyone can use to embrace uncertainty and make better decisions.</p>\n            <p className=\"animate-text\">By shifting your thinking from a need for certainty to a goal of accurately assessing what you know and what you don&apos;t, you&apos;ll be less vulnerable to reactive emotions, knee-jerk biases, and destructive habits in your decision making. You&apos;ll become more confident, calm, compassionate and successful in the long run.</p>\n            <span className=\"more-text\">Tap to read more</span>\n            <div className=\"dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"tile\">\n          <img src='https://images.unsplash.com/photo-1458668383970-8ddd3927deed?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=1004&q=80' />\n          <div className=\"text\">\n            <h1>Atomic Habits</h1>\n            <p className=\"animate-text\">Atomic Habits is a book written by James Clear. It is a self-help book that takes a scientific and logical approach to understand how small habits impact our lives and how developing a few great habits and working on them daily for a long time will lead to higher productivity.</p>\n            <p className=\"animate-text\">“Every action you take is a vote for the type of person you wish to become. No single instance will transform your beliefs, but as the votes build up, so does the evidence of your new identity.”</p>\n            <span className=\"more-text\">Tap to read more</span>\n            <div className=\"dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"tile\">\n          <img src='https://images.unsplash.com/photo-1422393462206-207b0fbd8d6b?dpr=1&auto=format&crop=entropy&fit=crop&w=1500&h=1000&q=80' />\n          <div className=\"text\">\n            <h1>Lorem ipsum.</h1>\n            <p className=\"animate-text\">Bacon ipsum dolor amet pork belly tri-tip turducken, pancetta bresaola pork chicken meatloaf. Flank sirloin strip steak prosciutto kevin turducken. </p>\n            <span className=\"more-text\">Tap to read more</span>\n            <div className=\"dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/contact-back.ddaf1bc3.avif\";","export default __webpack_public_path__ + \"static/media/me-avatar.45b3f8a8.jpeg\";","import {\n  Avatar, Box, Card, CardActions, CardContent, CardMedia,\n  createStyles, IconButton, makeStyles, Typography,\n} from '@material-ui/core';\nimport {\n  LinkedIn as LinkedInIcon,\n  Instagram as InstagramIcon,\n  GitHub as GitHubIcon,\n} from '@material-ui/icons';\nimport React from 'react';\n\nimport ContactBackImage from '../assets/images/contact-back.avif';\nimport MeAvatar from '../assets/images/me-avatar.jpeg';\n\nconst useStyles = makeStyles(() => createStyles({\n  root: {\n    maxWidth: 500,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n    border: '2px solid #fff',\n    margin: '-40px 210px 0 auto',\n    '& > img': {\n      margin: 0,\n    },\n  },\n}));\n\nexport default function Contact() {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexGrow={1} height=\"calc(100vh - 64px)\">\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.media}\n          image={ContactBackImage}\n        />\n        <Avatar className={classes.avatar} alt=\"Remy Sharp\" src={MeAvatar} />\n        <CardContent>\n          <Typography variant='h5' color='textSecondary' align='center'>Apoorva Sharma</Typography>\n          <Typography variant='subtitle1' color=\"textSecondary\" component=\"div\">\n          Highly motivated <Box fontWeight='fontWeightBold' display='inline'>back-end engineer</Box> proficient in Java, Python and data analytics. Seeks\n          to bring 4 years of professional technical experience to a <Box fontWeight='fontWeightBold' display='inline'>product manager</Box> position in a\n          goal-oriented, fast-paced tech environment.\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Box display=\"flex\" justifyContent=\"space-evenly\" flexGrow={1}>\n            <IconButton aria-label=\"linkedin\">\n              <LinkedInIcon />\n            </IconButton>\n            <IconButton aria-label=\"github\">\n              <GitHubIcon />\n            </IconButton>\n            <IconButton aria-label=\"instagram\">\n              <InstagramIcon />\n            </IconButton>\n          </Box>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/grubgo.e0088c2f.jpeg\";","export default __webpack_public_path__ + \"static/media/modeling-future.ce453946.png\";","export default __webpack_public_path__ + \"static/media/triggers.ef4ba995.png\";","import './work.css';\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Container,\n  Grid,\n} from '@material-ui/core';\n\nimport React from 'react';\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\nimport { useN01TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n01';\nimport { useSlopeCardMediaStyles } from '@mui-treasury/styles/cardMedia/slope';\nimport useResponsive from '../hooks/useResponsive';\n\nimport GrubGoImage from '../assets/images/grubgo.jpeg';\nimport ModelingFutureImage from '../assets/images/modeling-future.png';\nimport TriggersImage from '../assets/images/triggers.png';\n\nexport default function Work() {\n  const fetchByMediaQuery = useResponsive();\n  const mediaStyles = useSlopeCardMediaStyles();\n  const textCardContentStyles = useN01TextInfoContentStyles();\n\n  return (\n    <Container>\n      <Box display='flex' height='calc(100vh - 80px)'>\n        <Grid container className='work-items' alignItems='stretch' spacing={fetchByMediaQuery({ xs: 4, md: 6 })}>\n          <Grid item sm={12} md={4} className=\"work-item side\">\n            <Grid container direction='column'>\n              <Grid item sm={12}>\n                <Box height=\"100px\" sx={{ display: { xs: 'none', md: 'flex' } }}></Box>\n              </Grid>\n              <Grid item sm={12}>\n              <Card raised={true}>\n                  <CardMedia\n                    classes={mediaStyles}\n                    image={GrubGoImage}\n                  />\n                  <CardContent className='work-item-contetnt'>\n                    <TextInfoContent\n                      classes={textCardContentStyles}\n                      heading={'GrubGo'}\n                      body={\n                        'One cannot think well, love well, sleep well, if one has not dined well. No denial to Virgina Woolfe. Food helps us to boost serotonin and also helps us to socialise and grow bonding with people. We do have various dine-out apps but there are certain things we are still missing which we would like to accomplish with this app idea.'\n                      }\n                    />\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item sm={12} md={4} className=\"work-item mid\">\n            <Grid container direction='column' >\n              <Grid item sm={12}>\n              <Card raised={true}>\n                  <CardMedia\n                    classes={mediaStyles}\n                    image={TriggersImage}\n                  />\n                  <CardContent className='work-item-contetnt'>\n                    <TextInfoContent\n                      classes={textCardContentStyles}\n                      heading={'Consignment Triggers'}\n                      body={\n                        'Designed and developed trigger feature for every leg of consignment reducing the no. of calls to fleet operators by ~80%. Leveraged Jira software to increase on time delivery per sprint by 9%. Managed cross-functional team and stakeholder communication, and oversaw tech development from inception to implementation.'\n                      }\n                    />\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item sm={12}>\n                <Box height=\"100px\" sx={{ display: { xs: 'none', md: 'flex' } }}></Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item sm={12} md={4} className=\"work-item side\">\n            <Grid container direction='column'>\n              <Grid item sm={12}>\n                <Box height=\"100px\" sx={{ display: { xs: 'none', md: 'flex' } }}></Box>\n              </Grid>\n              <Grid item sm={12}>\n                <Card raised={true}>\n                  <CardMedia\n                    classes={mediaStyles}\n                    className=\"work-item-media modeling-future\"\n                    image={ModelingFutureImage}\n                  />\n                  <CardContent>\n                    <TextInfoContent\n                      classes={textCardContentStyles}\n                      heading={'Modelling Future App'}\n                      body={\n                        'App that helps match fresh graduates to relevant jobs. Prepared PRD defining the requirements for business and technical teams. Gathered user stories, outlining students\\' perspective. Implemented wire-frame and mock-ups using Figma.'\n                      }\n                    />\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n","import {\n  AppBar, Box, Button, IconButton, Link, Menu, MenuItem, ThemeProvider, Toolbar,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\nimport {\n  HashRouter as Router,\n  Link as RouterLink,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport theme from './theme';\nimport Home from './pages/home';\nimport Interest from './pages/interest';\nimport Contact from './pages/contact';\nimport Work from './pages/work';\n\nexport default function App() {\n  const pages = ['Work', 'Interest', 'Contact'];\n\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n              <Link component={RouterLink} variant=\"h6\" color='textPrimary' to='/'>\n                ME\n              </Link>\n            </Box>\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n              {pages.map((page) => (\n                <Button\n                  key={page}\n                  component={RouterLink}\n                  to={`/${page.toLowerCase()}/`}\n                  onClick={handleCloseNavMenu}\n                >\n                  {page}\n                </Button>\n              ))}\n            </Box>\n            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n              <IconButton\n                size=\"medium\"\n                aria-label=\"all pages\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n              >\n                {pages.map((page) => (\n                  <MenuItem key={page} onClick={handleCloseNavMenu}>\n                    <Link\n                      key={page}\n                      component={RouterLink}\n                      to={`/${page.toLowerCase()}/`}\n                    >\n                      {page}\n                    </Link>\n                  </MenuItem>\n                ))}\n              </Menu>\n            </Box>\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n              <Link component={RouterLink} variant=\"h6\" color='textPrimary' to='/'>\n                ME\n              </Link>\n            </Box>\n          </Toolbar>\n        </AppBar>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/work/\">\n            <Work />\n          </Route>\n          <Route path=\"/interest/\">\n            <Interest />\n          </Route>\n          <Route path=\"/contact/\">\n            <Contact />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}